---
import clsx from "clsx";

interface Props {
  label: string;
  children: unknown;
  toggleClassName?: string;
}
const { label, toggleClassName } = Astro.props;
---

<dropdown-container>
  <button
    type="button"
    class={clsx("dropdown-toggle", toggleClassName)}
    aria-expanded="false"
    data-toggle>{label}</button
  >
  <div class="hidden lg:absolute" data-container>
    <slot />
  </div>
</dropdown-container>
<script>
  class Dropdown extends HTMLElement {
    connectedCallback() {
      const button = this.querySelector("[data-toggle]");
      const container = this.querySelector("[data-container]");

      button?.addEventListener("click", () => {
        if (button.getAttribute("aria-expanded") === "true") {
          button.setAttribute("aria-expanded", "false");
          container?.classList.replace("block", "hidden");
        } else {
          button.setAttribute("aria-expanded", "true");
          container?.classList.replace("hidden", "block");
        }
      });
    }
  }

  customElements.define("dropdown-container", Dropdown);
</script>
<style>
  .dropdown-toggle::after {
    border-bottom: 0;
    border-left: 0.3rem solid transparent;
    border-right: 0.3rem solid transparent;
    border-top: 0.3rem solid;
    content: "";
    display: inline-block;
    margin-left: 0.255rem;
    vertical-align: 0.255rem;
  }
</style>
